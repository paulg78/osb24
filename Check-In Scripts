const RES_SS = "1kbWyrfRXhRCKi_mPZctLkPxwAnKzyM5uAHXtcYvnhto"

/* onEdit function doesn't work; gets a permission error when triggered:
Exception: You do not have permission to call SpreadsheetApp.openById. Required permissions: https://www.googleapis.com/auth/spreadsheets
    at onEdit(code:21:27), uses a "simple trigger" onEdit event 
    need to use installable trigger instead */

/* This function sets the checkin value in the response spreadsheet so they are preserved */
function updateCheckin(e) {
  var range = e.range;
  var sheet = range.getSheet();
  /* return if not checking a box on Time Slot worksheet */
  /*   Logger.log("col=" + range.getColumn()); */
  if (sheet.getName() !== 'By Time Slot' || range.getColumn() !== 1) {
    return;
  }
  /*   Logger.log("correct sheet/col"); */
  var row = range.getRow();
  var timestamp = sheet.getRange(row, 10).getValue();
  /* Logger.log('timestamp=' + timestamp); */

  /* return if checking a box without a time slot */
  if (timestamp == "") {
    /*     Logger.log('no timestamp'); */
    return;
  }
  var checkIn = sheet.getRange(row, 1).getValue();
  /* get timestamp into a format that can be found on reservation spreadsheet */
  /* could write my own date formatter if formatDate proves unreliable; will timezone be an issue? */
  var timefmt = Utilities.formatDate(timestamp, 'GMT-6', 'M/dd/yyyy H:mm:ss:SSS');
  /* var timefmt = Utilities.formatDate(timestamp,'GMT-6','m"/"d"/"yyyy" "h":"mm":"ss":"000'); This format, used in setNumberFormat, doesn't work */

  /*   Logger.log('tostring=' + timestamp.toString()); */
  Logger.log('timefmt=' + timefmt);
  var ss = SpreadsheetApp.openById(RES_SS);
  var responses_ws = ss.getSheetByName("Form Responses");
  /*  var cell = responses_ws.getRange(11, 1).getCell(1, 1);
   Logger.log("ts on res ss=" + cell.getValue()); */

  /*  var tf = responses_ws.createTextFinder("17:55"); not found; wrong timezone*/
  /* var tf = responses_ws.createTextFinder("5/20/2024 18:55:22:863"); */ /* This works so it is searching on how it is displayed in the spreadsheet; */
  var tf = responses_ws.createTextFinder(timefmt).matchEntireCell(true);

  var firstOccurrence = tf.findNext();
  if (firstOccurrence == null) {
    Logger.log("not found");
    /*   don't return--so I'll get notified of failures */
  }
  row = firstOccurrence.getRow();
  /*   Logger.log("row=" + row); */
  var range = responses_ws.getRange(row, 10);
  range.getCell(1, 1).setValue(checkIn);
}

/* This function creates 2 worksheets, one for looking up students by time slot and the other for looking up students by name */
function formatforCheckin() {
  /* format timestamp in responses worksheet; otherwise new entries will be in wrong format */
  var ss = SpreadsheetApp.openById(RES_SS);
  var responses_ws = ss.getSheetByName("Form Responses");
  responses_ws.getRange('A:A').setNumberFormat('m"/"d"/"yyyy" "h":"mm":"ss":"000');

  var spreadsheet = SpreadsheetApp.getActive();

  /* Delete Time Slot and Student Names worksheets if present */
  if (spreadsheet.getSheetByName('By Time Slot') != null) {
    spreadsheet.setActiveSheet(spreadsheet.getSheetByName('By Time Slot'), true);
    spreadsheet.deleteActiveSheet();
  }
  if (spreadsheet.getSheetByName('By Student Name') != null) {
    spreadsheet.setActiveSheet(spreadsheet.getSheetByName('By Student Name'), true);
    spreadsheet.deleteActiveSheet();
  }

  /* Create By time slot worksheet */
  spreadsheet.setActiveSheet(spreadsheet.getSheetByName('Data Import'), true);
  spreadsheet.insertSheet('By Time Slot');

  /* Copy data from Data Import worksheet */
  spreadsheet.getRange('\'Data Import\'!A:J').copyTo(spreadsheet.getActiveRange(), SpreadsheetApp.CopyPasteType.PASTE_VALUES, false);
  /* Re-arrange columns */
  spreadsheet.getRange('A:A').setNumberFormat('m"/"d"/"yyyy" "h":"mm":"ss":"000');
  spreadsheet.getRange('A:A').moveTo(spreadsheet.getRange('K:K'));
  spreadsheet.getRange('J:J').moveTo(spreadsheet.getRange('A:A'));
  spreadsheet.getActiveSheet().insertColumnsBefore(2, 5);
  spreadsheet.getRange('N:N').moveTo(spreadsheet.getRange('B:B'));
  spreadsheet.getRange('L:L').moveTo(spreadsheet.getRange('C:C'));
  spreadsheet.getRange('K:K').moveTo(spreadsheet.getRange('D:D'));
  spreadsheet.getRange('J:J').moveTo(spreadsheet.getRange('E:E'));
  spreadsheet.getRange('M:M').moveTo(spreadsheet.getRange('F:F'));
  spreadsheet.getRange('F1').getCell(1, 1).setValue('Grade');
  spreadsheet.getActiveSheet().deleteColumns(10, 6);
  spreadsheet.getRange('C1').getCell(1, 1).setValue('Last name');
  spreadsheet.getRange('D1').getCell(1, 1).setValue('First name');
  spreadsheet.getRange('H1').getCell(1, 1).setValue('Coun.Lastname');
  spreadsheet.getRange('I1').getCell(1, 1).setValue('Coun.Firstname');
  /* Logger.log('brows=' + spreadsheet.getRange('B:B').getNumRows());
  Logger.log('ajrows=' + spreadsheet.getRange('A:J').getNumRows()); */
  spreadsheet.getRange('A:A').offset(1, 0, spreadsheet.getRange('B:B').getNumRows() - 1).insertCheckboxes();
  spreadsheet.getActiveSheet().autoResizeColumns(1, 10);

  spreadsheet.getRange('A:J').offset(1, 0, spreadsheet.getRange('A:J').getNumRows() - 1).sort([{ column: 2, ascending: true }, { column: 3, ascending: true }, { column: 4, ascending: true }]);
  spreadsheet.getRange('A1').activate();
  spreadsheet.getActiveSheet().setFrozenRows(1);
  spreadsheet.moveActiveSheet(0); /* Make Time Slot worksheet first */

  /* Create By Student Name worksheet from Time Slot worksheet */
  spreadsheet.duplicateActiveSheet();
  spreadsheet.getActiveSheet().setName('By Student Name');
  spreadsheet.getActiveSheet().deleteColumns(1, 1); /* check in not needed */
  spreadsheet.getActiveSheet().deleteColumns(9, 9); /* timestamp not needed */
  spreadsheet.getActiveSheet().insertColumnsBefore(1, 2);
  spreadsheet.getRange('D:D').moveTo(spreadsheet.getRange('A:A'));
  spreadsheet.getRange('E:E').moveTo(spreadsheet.getRange('B:B'));
  spreadsheet.getActiveSheet().deleteColumns(4, 2);
  spreadsheet.getActiveSheet().autoResizeColumns(1, 3);
  spreadsheet.getRange('A:J').offset(1, 0, spreadsheet.getRange('A:I').getNumRows() - 1).sort([{ column: 1, ascending: true }, { column: 2, ascending: true }]);
  spreadsheet.setActiveSheet(spreadsheet.getSheetByName('By Time Slot'), true);
  spreadsheet.getRange('A1').activate();
};
